
EDIT: A greater made fork of this project is avaiable here  [---> Terra](https://github.com/eranimo/terra) 


*** @MaksymSharinDev This is a fork of a fork of redblobgames' project. 
*** I will use this repo to reverse engineer the code and refactor it in a way that is more readable and understandable.

Code map:


[[https://github.com/MaksymSharinDev/1843-planet-generation/blob/master/functionsMap.png]]

------------------------------




# This is a fork of redblobgames' project. See original README below

[[http://unmaintained.tech/][http://unmaintained.tech/badge.svg]]

This was a 9 day (2.5hr/day) experiment to learn how to procedurally generate maps on a sphere. I hadn't worked with this type of sphere geometry before and wanted to learn.

** Geometry

[[https://www.redblobgames.com/x/1842-delaunay-voronoi-sphere/][Writeup]] - Fibonacci points, Delaunay triangles, Voronoi regions

[[https://www.redblobgames.com/x/1842-delaunay-voronoi-sphere/blog/fibonacci-sphere-voronoi.png]]

** Maps

[[https://www.redblobgames.com/x/1843-planet-generation/][Writeup]] - tectonic plates, mountains, oceans, biomes, rivers, rendering

[[https://www.redblobgames.com/x/1843-planet-generation/blog/continent-boundaries-5-small.jpg]]

[[https://www.redblobgames.com/x/1843-planet-generation/blog/planet-12-small.jpg]]

** Installation

To run in devel mode:

#+begin_src sh
yarn global add browserify watchify budo
yarn install
yarn watch
#+end_src

Then visit the budo url (probably [[http://localhost:9966/embed.html]]).

Alernatively, if you use npm instead of yarn:

#+begin_src sh
npm -g install browserify watchify budo
npm install
npm run watch
#+end_src

In production mode, run ~yarn build~ or ~npm run build~ and visit embed.html .
